name: Build and publish counter evaluation container image

env:
  REGISTRY: ghcr.io/modul-i-ch-109/counter
  REGISTRY_USER: ${{ github.actor }}
  # REGISTRY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
  REGISTRY_PASSWORD: ${{ secrets.CONTAINER_REGISTRY_TOKEN }}

  APP_NAME: counter

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  openshift-zli:
    name: Build and push to registry
    runs-on: ubuntu-latest

    steps:
    - name: Check if secrets exists
      uses: actions/github-script@v6
      with:
        script: |
          const secrets = {
            REGISTRY_PASSWORD: `${{ env.REGISTRY_PASSWORD }}`,
          };
          const missingSecrets = Object.entries(secrets).filter(([ name, value ]) => {
            if (value.length === 0) {
              core.warning(`Secret "${name}" is not set`);
              return true;
            }
            core.info(`✔️ Secret "${name}" is set`);
            return false;
          });
          if (missingSecrets.length > 0) {
            core.setFailed(`❌ At least one required secret is not set in the repository. \n` +
              "You can add it using:\n" +
              "GitHub UI: https://docs.github.com/en/actions/reference/encrypted-secrets#creating-encrypted-secrets-for-a-repository \n" +
              "GitHub CLI: https://cli.github.com/manual/gh_secret_set \n" +
              "Also, refer to https://github.com/redhat-actions/oc-login#getting-started-with-the-action-or-see-example");
          }
          else {
            core.info(`✅ All the required secrets are set`);
          }
    - uses: actions/checkout@v2

    ## general
    - name: Log in to registry
      uses: redhat-actions/podman-login@v1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ env.REGISTRY_USER }}
        password: ${{ env.REGISTRY_PASSWORD }}

    ## evaluation
    - name: Build evaluation from Dockerfile
      id: image-build-evaluation
      uses: redhat-actions/buildah-build@v2
      with:
        image: ${{ env.APP_NAME }}_${{ env.COMPONENT_NAME }}
        tags: latest ${{ github.sha }}
        context: ./
        containerfiles: |
          ./Dockerfile
      env:
        COMPONENT_NAME: evaluation

    - name: Push evaluation to registry
      id: push-to-registry-evaluation
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.image-build-evaluation.outputs.image }}
        tags: ${{ steps.image-build-evaluation.outputs.tags }}
        registry: ${{ env.REGISTRY }}
        username: ${{ env.REGISTRY_USER }}
        password: ${{ env.REGISTRY_PASSWORD }}