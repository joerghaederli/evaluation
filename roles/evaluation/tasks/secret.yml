---
- name: Set secrete_name
  set_fact:
    secrete_name: counter-test-secret

- include_tasks: check_secret.yml
  vars:
    secret_name: counter-test-secret

- name: Search for all secrets with the name counter-test-secret and compare the desired value
  k8s_info:
    kind: Secret
    name: counter-test-secret
    namespace: "{{ item.name }}-{{ ns }}"
  environment:
    K8S_AUTH_API_KEY: "{{ item.api_key }}"
    K8S_AUTH_HOST: "{{ item.auth_host }}"
  ignore_errors: True
  register: output

- name: Check the result
  assert:
    that:
      - output.resources[0].data.passphrase | b64decode == 'topsecret'
    quiet: true
  register: result
  ignore_errors: True

- include_tasks: score.yml
  vars:
    evaluation_case: Secret counter-test-secret in namespace [TEAMNAME]-{{ ns }} must exists and equals topsecret